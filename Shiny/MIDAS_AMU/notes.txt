=================================================================================================
ORIGINAL PLAN FOR APP:

1.
Heatmap of DDD by country (also have the option to show a data table)
	- have the option to choose year or range of years (for this will need to calculate an average within the app each time something is selected)
	- have the option to select ONE organism (including the "all" option)	
	- have the option to select ONE administration route (including the "all" option)
	- have the option to select ONE antimicrobial (including the "all" option)
	- have the option to select ONE aware_category (including the "all" option)

2.
Line plot of DDD over time (also have the option to show a data table) 
	- have four different tabs, each one allowing user to select a combination of four of countries/routes/antimicrobials/aware_category and the fifth will all appear on the plot
    	- set default to show all the categories of the fourth variable, but list as tick boxes so can de-select them if desired (using checkboxGroupInput())
	- also have the option to collapse into an "all" category (see above)
=================================================================================================
DEPLOY OPTIONS:

	1. Deploy to the cloud
		- https://www.shinyapps.io/?_ga=2.124969162.1745752972.1675950619-1149319099.1670938131
	2. Deploy on-premises or in your VPC (open source) - "Shiny Server"
		- https://posit.co/products/open-source/shinyserver/?_ga=2.124969162.1745752972.1675950619-1149319099.1670938131
		- ADILA Shiny server now available!!!
			- guidance:
				- https://docs.posit.co/shiny-server/
				- https://www.youtube.com/watch?v=JL4T0qfqY7k
					- Install packages (using "pak")?
						- pak::pkg_system_requirements("shiny", execute = T)
						- pak::pak(c())
					- git clone https://...
					- The URL structure is: <instance_ipv4>:3838/<app-folder-name>:
				- https://appsilon.com/how-to-share-r-shiny-apps/


	- General guidance: https://shiny.rstudio.com/articles/shinyapps.html
=================================================================================================
=
= EXAMPLE SHINY SERVER:
=

# Instruct Shiny Server to run applications as the user "shiny"
run_as shiny;

#preserve_logs true;
#sanitize_errors false;

template_dir /etc/shiny-server/templates;

# Define a server that listens on port 3838
server {
  listen 3838 127.0.0.1;

  # Define a location at the base URL
  location / {
    # Only up to 20 connections per Shiny process and at most 3 Shiny processes
    # per application. Proactively spawn a new process when our processes reach 
    # 90% capacity.
    utilization_scheduler 20 .9 3;

    # Host the directory of Shiny Apps stored in this directory
    site_dir /srv/shiny-server;

    # if a user is idle for x seconds (no interaction with server),
    # disconnect them from the server
    app_session_timeout 900;

    google_analytics_id "UA-59820529-4";

    # Log all Shiny output to files in this directory
    log_dir /var/log/shiny-server;

    # When a user visits the base URL rather than a particular application,
    # an index of the applications available in this directory will be shown.
    directory_index on;

    location /persistent-data-storage {
      utilization_scheduler 5 .9 7;
    }
    location /mimic-google-form {
      utilization_scheduler 10 .9 5;
    }
    location /authtest {
      required_user *;
    }
    location /ibis {
      required_user *;
    }
  }
}

# Setup a flat-file authentication system. {.pro}
auth_passwd_file /etc/shiny-server/passwd;

# Define a default admin interface to be run on port 4151. {.pro}
admin 4151 {
  # Only permit the user named `admin` to access the admin interface.
  required_user admin;
}
